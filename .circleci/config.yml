version: 2
# We're doing a workspace persistence based on the root of the FS which looks completely wrong.
# It's because we cannot rely solely on virtualenv as the sole libraries source. Protobuf
# (which is a current python dependency) installs some files directly in the system.
jobs:
  # Tests can benefit from standard caching
  tests:
    docker:
      - image: circleci/python:3.6
    parallelism: 2
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local
      - restore_cache:
          keys:
            - tests-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run: .circleci/prepare.sh
      - run: ./run_tests.sh
      - save_cache:
          paths:
            - /usr/local/lib/python3.6/site-packages
            - /usr/local/bin
          key: tests-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}

  # We're fetching the build infos
  get-build-infos:
    docker:
      - image: habx/devops-build-infos
    working_directory: /work/env
    steps:
      - checkout
      - run: /build/run.sh
      - persist_to_workspace:
          root: /work/env
          paths:
            - version.txt
            - package.json
            - build.json

  # We're fetching the requirements to prepare the container
  get-requirements:
    docker:
      - image: circleci/python:3.6
    working_directory: /work
    steps:
      - checkout
      - run: .circleci/get-requirements.sh
      - persist_to_workspace:
          root: /work
          paths:
            - venv

  build-container:
    docker:
      - image: plugins/ecr:17.05
    working_directory: /work
    steps:
      - checkout
      - attach_workspace:
          at: /work
      - run: ls -lh
      - setup_remote_docker:
          docker_layer_caching: true
      - run: .circleci/build-container.sh

  deploy-to-kubernetes-standard-worker:
    docker:
      - image: quay.io/honestbee/drone-kubernetes
    steps:
      - run:
          command: |
            export CIRCLE_PROJECT_REPONAME=worker-optimizer-v2
            export BUILD_REF=$(if [ -z "$CIRCLE_TAG" ]; then echo ${CIRCLE_BRANCH/\//-}-${CIRCLE_SHA1:0:7}; else echo $CIRCLE_TAG; fi)
            export DST_NAMESPACE=$(if [ -z "$CIRCLE_TAG" ]; then echo dev; else echo staging; fi)

            export PLUGIN_TAG=${BUILD_REF}
            export PLUGIN_REPO=724009402066.dkr.ecr.eu-west-1.amazonaws.com/${CIRCLE_PROJECT_REPONAME}
            export PLUGIN_CONTAINER=${CIRCLE_PROJECT_REPONAME}
            export PLUGIN_DEPLOYMENT=${CIRCLE_PROJECT_REPONAME}
            export PLUGIN_NAMESPACE=${DST_NAMESPACE}
            export PLUGIN_KUBERNETES_SERVER=${KUBERNETES_SERVER_DEV}
            export PLUGIN_KUBERNETES_TOKEN=${KUBERNETES_TOKEN_DEV}
            /bin/update.sh

  deploy-to-kubernetes-low-priority-worker:
    docker:
      - image: quay.io/honestbee/drone-kubernetes
    steps:
      - run:
          command: |
            export CIRCLE_PROJECT_REPONAME=worker-optimizer-v2
            export BUILD_REF=$(if [ -z "$CIRCLE_TAG" ]; then echo ${CIRCLE_BRANCH/\//-}-${CIRCLE_SHA1:0:7}; else echo $CIRCLE_TAG; fi)
            export DST_NAMESPACE=$(if [ -z "$CIRCLE_TAG" ]; then echo dev; else echo staging; fi)

            export PLUGIN_TAG=${BUILD_REF}
            export PLUGIN_REPO=724009402066.dkr.ecr.eu-west-1.amazonaws.com/${CIRCLE_PROJECT_REPONAME}
            export PLUGIN_CONTAINER=${CIRCLE_PROJECT_REPONAME}-low-priority
            export PLUGIN_DEPLOYMENT=${CIRCLE_PROJECT_REPONAME}-low-priority
            export PLUGIN_NAMESPACE=${DST_NAMESPACE}
            export PLUGIN_KUBERNETES_SERVER=${KUBERNETES_SERVER_DEV}
            export PLUGIN_KUBERNETES_TOKEN=${KUBERNETES_TOKEN_DEV}
            /bin/update.sh

workflows:
  version: 2
  ci-process:
    jobs:
      - get-build-infos
      - tests:
          filters:
            tags:
              only: /^v.*/

      - build-container:
          context: default_env_vars
          requires:
            - get-build-infos
            - get-requirements
      #          filters:
      #            tags:
      #              only: /^v.*/
      #            branches:
      #              only:
      #                - dev

      - deploy-to-kubernetes-standard-worker:
          context: default_env_vars
          requires:
            - build-container
            - tests
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - dev

      - deploy-to-kubernetes-low-priority-worker:
          context: default_env_vars
          requires:
            - build-container
            - tests
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - dev
